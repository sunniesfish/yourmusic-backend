name: Backend Build and Deploy

# Workflow runs when code is pushed to main branch
on:
  push:
    branches: [main]

# Environment variables
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  REPOSITORY: ${{ secrets.GCP_REPOSITORY }}
  IMAGE_NAME: ${{ secrets.GCP_IMAGE_NAME }}
  SERVICE_NAME: ${{ secrets.GCP_SERVICE_NAME }}
  SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
  SA_KEY: ${{ secrets.GCP_SA_KEY }}
  SECRET_NAME: ${{ secrets.GCP_ENV_SECRET_NAME }}
  DB_INSTANCE_CONNECTION_NAME: ${{ secrets.GCP_DB_INSTANCE_CONNECTION_NAME }}
jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the source code
      - name: Checkout source code
        uses: actions/checkout@v3

      # 2. Set up Google Cloud authentication
      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ env.SA_KEY }}

      # 3. Set up Google Cloud SDK
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      # 4. Configure Docker authentication
      - name: Configure Docker authentication
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      # 5. Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
                       -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest \
                       .

      # 6. Push Docker image to Artifact Registry
      - name: Push Docker image
        run: |
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest

      # 7. Deploy to Cloud Run with Secret File mount
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --service-account ${{ env.SERVICE_ACCOUNT }} \
            --set-secrets="/app/.env=${{ env.SECRET_NAME }}:latest"
            --add-cloudsql-instances ${{ env.DB_INSTANCE_CONNECTION_NAME }}
