# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input ChangePasswordInput {
  id: ID!
  password: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  changePassword(input: ChangePasswordInput!): User!
  checkPassword(input: ChangePasswordInput!): Boolean!
  convertToSpotifyPlaylist(listJSON: [PlaylistJSONInput!]!): Boolean!
  convertToYoutubePlaylist(listJSON: [PlaylistJSONInput!]!): Boolean!
  readPlaylist(link: String!): [PlaylistJSON!]!
  removePlaylist(id: Int!): Playlist!
  removeStatistic(userId: ID!): Statistic!
  savePlaylist(savePlaylistInput: SavePlaylistInput!): Boolean!
  saveStatistic(saveStatisticInput: SaveStatisticInput!): Boolean!
  signIn(signInInput: SignInInput!): SignInResponse!
  signOut: Boolean!
  signUp(signUpInput: SignUpInput!): Boolean!
  updateStatistic(updateStatisticInput: UpdateStatisticInput!): Statistic!
  updateUser(updateUserInput: UpdateUserInput!): Boolean!
}

type Playlist {
  createdAt: DateTime!
  id: ID!
  listJson: [PlaylistJSON!]!
  name: String!
  user: User!
}

type PlaylistJSON {
  album: String
  artist: String
  thumbnail: String
  title: String
}

input PlaylistJSONInput {
  album: String
  artist: String
  thumbnail: String
  title: String
}

type PlaylistsResponse {
  playlists: [Playlist!]!
  totalPages: Int!
}

type Query {
  playlist(id: Int!): Playlist!
  playlistsPage(limit: Int!, orderBy: String!, page: Int!): PlaylistsResponse!
  statistic(userId: ID!): Statistic!
  user: User!
}

input SavePlaylistInput {
  listJson: [PlaylistJSONInput!]!
  name: String!
}

input SaveStatisticInput {
  albumRankJson: String!
  artistRankJson: String!
  genreRankJson: String!
  userId: ID!
}

input SignInInput {
  id: String!
  password: String!
}

type SignInResponse {
  accessToken: String!
  user: User!
}

input SignUpInput {
  id: String!
  name: String!
  password: String!
  profileImg: String
}

type Statistic {
  albumRankJson: String!
  artistRankJson: String!
  genreRankJson: String!
  user: User!
  userId: ID!
}

input UpdateStatisticInput {
  albumRankJson: String
  artistRankJson: String
  genreRankJson: String
  userId: ID!
}

input UpdateUserInput {
  id: String!
  name: String
  profileImg: String
}

type User {
  id: ID!
  name: String!
  profileImg: String
}